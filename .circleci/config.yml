# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/openjdk:11-jdk
  environment:
    - GRADLE_USER_HOME: /home/circleci/repo/.gradle_home
  working_directory: ~/repo

defaultsWithElasticsearch: &defaultsWithElasticsearch
  environment:
    - GRADLE_USER_HOME: /home/circleci/repo/.gradle_home
  docker:
    - image: circleci/openjdk:11-jdk # primary container to issue gradle commands from
    - image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
      environment:
        - cluster.name: elasticsearch-test
        - xpack.security.enabled: false
        - transport.host: localhost
        - network.host: 127.0.0.1
        - http.port: 9200
        - discovery.type: single-node
        - ES_JAVA_OPTS: "-Xms160m -Xmx320m" # Customize the JVM maximum heap limit (will crash container if too high on Circle)
  working_directory: ~/repo

defaultsMachine: &defaultsMachine
  machine:
    docker_layer_caching: true
  working_directory: ~/repo

env: &env
  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m

restoreCache: &restoreCache
  # Download and cache dependencies
  restore_cache:
    keys:
      - onestop-cache-v21-{{ checksum "buildSrc/build.gradle.kts" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "client/build.gradle.kts" }}-{{ checksum "client/package.json" }}-{{ checksum "registry/build.gradle" }}-{{ checksum "search/build.gradle" }}-{{ checksum "parsalyzer/build.gradle" }}
      # fallback to using the latest cache if no exact match is found
      # - onestop-cache-v21-

saveCache: &saveCache
  save_cache:
    paths:
      - .gradle_home
      - .gradle
      - build
      - buildSrc/build
      - buildSrc/.gradle
      - client/build
      - client/.gradle
      - client/node_modules
      - registry/build
      - search/build
      - parsalyzer/build
    key: onestop-cache-v21-{{ checksum "buildSrc/build.gradle.kts" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "client/build.gradle.kts" }}-{{ checksum "client/package.json" }}-{{ checksum "registry/build.gradle" }}-{{ checksum "search/build.gradle" }}-{{ checksum "parsalyzer/build.gradle" }}

attachWorkspace: &attachWorkspace
  - attach_workspace:
      at: ~/repo

jobFilters: &jobFilters
  filters:
    tags:
      only: /.*/

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - <<: *restoreCache
      - run:
          name: Build shared resources
          command: ./gradlew --parallel elastic-common:build kafka-common:build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  search:
    <<: *defaultsWithElasticsearch
    <<: *env
    steps:
      - <<: *attachWorkspace
      - run:
          name: Assemble, Check (sans integration tests)
          command: ./gradlew --parallel search:assemble search:check -x integrationTest
      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run:
          name: Integration Tests
          command: ./gradlew search:integrationTest
      - run:
          name: Generate Coverage Report
          command: ./gradlew search:jacocoTestReport -x test
      - run:
          name: Collect Test Results
          command: |
            mkdir -p ~/tests/junit/
            find search/ -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find search/ -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always
      - store_test_results:
          path: ~/tests
      - store_artifacts:
          path: search/build/reports
      - deploy:
          name: Publish Image(s)
          command: ./gradlew search:jib -Djib.httpTimeout=30000 -Djib.console=plain
      - persist_to_workspace:
          root: ~/repo
          paths:
            - search/build

  client:
    <<: *defaults
    steps:
      - <<: *attachWorkspace
      - run:
          name: Assemble, Check, Report
          command: ./gradlew --parallel client:assemble client:check
      - run:
          name: Collect Test Results
          command: |
            mkdir -p ~/tests/junit/
            find client/ -type f -regex ".*/build/junit/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always
      - store_test_results:
          path: ~/tests
      - deploy:
          name: Publish Image(s)
          command: ./gradlew client:jib -Djib.httpTimeout=30000 -Djib.console=plain
      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/build
            - client/node_modules

  indexer:
    <<: *defaultsWithElasticsearch
    <<: *env
    steps:
      - <<: *attachWorkspace
      - run:
          name: Assemble, Check, Report
          command: ./gradlew --parallel indexer:assemble indexer:check indexer:jacocoTestReport
      - run:
          name: Collect Test Results
          command: |
            mkdir -p ~/tests/junit/
            find indexer/ -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find indexer/ -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always
      - store_test_results:
          path: ~/tests
      - store_artifacts:
          path: indexer/build/reports
      - deploy:
          name: Publish Image(s)
          command: ./gradlew indexer:jib -Djib.httpTimeout=30000 -Djib.console=plain
      - persist_to_workspace:
          root: ~/repo
          paths:
            - indexer/build

  registry:
    <<: *defaults
    <<: *env
    steps:
    - <<: *attachWorkspace
    - run:
        name: Assemble, Check, Report
        command: ./gradlew --parallel registry:assemble registry:check registry:jacocoTestReport
    - run:
        name: Collect Test Results
        command: |
          mkdir -p ~/tests/junit/
          find registry/ -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
          find registry/ -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
        when: always
    - store_test_results:
        path: ~/tests
    - store_artifacts:
        path: registry/build/reports
    - deploy:
        name: Publish Image(s)
        command: ./gradlew registry:jib -Djib.httpTimeout=30000 -Djib.console=plain
    - persist_to_workspace:
        root: ~/repo
        paths:
        - registry/build

  parsalyzer:
    <<: *defaults
    <<: *env
    steps:
    - <<: *attachWorkspace
    - run:
        name: Assemble, Check, Report
        command: ./gradlew --parallel parsalyzer:assemble parsalyzer:check parsalyzer:jacocoTestReport
    - run:
        name: Collect Test Results
        command: |
          mkdir -p ~/tests/junit/
          find parsalyzer/ -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
          find parsalyzer/ -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
        when: always
    - store_test_results:
        path: ~/tests
    - store_artifacts:
        path: parsalyzer/build/reports
    - deploy:
        name: Publish Image(s)
        command: ./gradlew parsalyzer:jib -Djib.httpTimeout=30000 -Djib.console=plain
    - persist_to_workspace:
        root: ~/repo
        paths:
        - parsalyzer/build

  finalize:
    <<: *defaults
    steps:
      - <<: *attachWorkspace
      - run:
          name: Post coverage results to codecov
          command: |
            bash <(curl -s https://codecov.io/bash)
      - <<: *saveCache

  check-owasp-cve:
    <<: *defaults
    steps:
      - <<: *attachWorkspace
      - run:
          name: Run OWASP Check
          command: ./gradlew dependencyCheckUpdate dependencyCheckAggregate
          no_output_timeout: 30m
      - store_artifacts:
          path: build/reports

  e2e:
    <<: *defaultsMachine
    <<: *env
    steps:
      - <<: *attachWorkspace
      - run:
          name: apt-get update
          command:  sudo apt-get update
      - run:
          name: install java 11
          command: sudo apt install openjdk-11-jdk
      - run:
          name: list java versions
          command: sudo update-alternatives --list java
      - run:
          name: list javac versions
          command: sudo update-alternatives --list javac
      - run:
          name: set java version
          command: sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
      - run:
          name: set javac version
          command: sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
      - run:
          name: set JAVA_HOME
          command: export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - run:
          name: inspect java version
          command: java -version
      - run:
          name: inspect JAVA_HOME
          command: echo "JAVA_HOME = $JAVA_HOME"
      - run:
          name: E2E tests
          command: ./gradlew e2e-tests:test

workflows:
  version: 2
  build:
    jobs:
      - checkout:
          <<: *jobFilters
      - client:
          requires:
            - checkout
          <<: *jobFilters
      - registry:
          requires:
            - checkout
          <<: *jobFilters
      - indexer:
          requires:
            - checkout
          <<: *jobFilters
      - search:
          requires:
            - checkout
          <<: *jobFilters
      - parsalyzer:
          requires:
            - checkout
          <<: *jobFilters
      - finalize:
          requires:
            - client
            - registry
            - indexer
            - search
            - parsalyzer
          <<: *jobFilters

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - check-owasp-cve:
          requires:
            - checkout
      - e2e:
          requires:
            - checkout

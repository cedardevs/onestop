buildscript {
  ext {
    springBootVersion = '2.2.4.RELEASE'
    gradleNodePluginVersion = '1.3.1'
    dependencyCheckGradleVersion = '5.0.0-M3.1'
  }
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "com.moowork.gradle:gradle-node-plugin:${gradleNodePluginVersion}"
    classpath "org.owasp:dependency-check-gradle:${dependencyCheckGradleVersion}"
  }
}

plugins {
  id 'com.gradle.build-scan' version '2.2.1'
  id "io.spring.dependency-management" version '1.0.6.RELEASE'
  id "org.owasp.dependencycheck" version "5.2.2"
}

dependencyCheck {
  skipConfigurations = ["providedRuntime"]
  suppressionFile = "${rootDir}/owasp-suppressions.xml"
  failBuildOnCVSS = 4

  // One of our dependencies has an un-parsable pom which causes dependency-checker
  // to throw an exception. However, the checks still run and it still generates a
  // report, so I think it's safe(ish) to ignore the error.
  failOnError = false
}

subprojects {

  project.ext {
    schemasVersion = '0.5.3'
    esVersion = '6.8.4'
    spockVersion = '1.2-groovy-2.5'
    testContainersVersion = '1.15.3'
    groovyVersion = '2.5.15'
    openSAMLVersion = '3.4.3'
    logbackVersion = '1.2.3'
    javaxServletAPIVersion = '4.0.1'
    junitVersion = '4.12'
    auth0JavaJWT = '3.4.1'
    confluentVersion = '5.4.0'
    kafkaVersion = '2.4.0'
    springKafkaVersion = '2.4.1.RELEASE'
    avroVersion = '1.9.1'
  }

  // URL for the source code under version control from which this container image was built.
  project.ext.getVcsUrl = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
      ignoreExitValue = true
      workingDir '.'
      executable = 'git'
      args = ['config', '--get', 'remote.origin.url']
      standardOutput = stdout
    }
    return stdout.toString().trim()
  }

  // Identifier for the version of the source code from which this image was built.
  // For example if the version control system is git this is the SHA.
  project.ext.getVcsRef = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
      ignoreExitValue = true
      workingDir '.'
      executable = 'git'
      args = ['rev-parse', '--short', 'HEAD']
      standardOutput = stdout
    }
    return stdout.toString().trim()
  }

  afterEvaluate {
    repositories {
      mavenCentral()
      maven { url "https://repo.spring.io/milestone" }
      maven { url 'https://packages.confluent.io/maven/' }
      maven { url "https://www.jitpack.io" }
    }

    // override versions of dependencies with vulnerabilities
    configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.santuario' && details.requested.name == 'xmlsec') {
          if (details.requested.version.startsWith('2.0') && details.requested.version <= '2.1.4') {
            details.useVersion '2.1.4'
            details.because 'fixes CVE-2019-12400'
          }
        }

        if (details.requested.group == 'org.apache.avro' && details.requested.name == 'avro') {
          if(details.requested.version < avroVersion) {
            details.useVersion avroVersion
            details.because 'latest avro does not depend on vulnerable jackson-mapper-asl which has not been updated since 2013'
          }
        }

        if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.name == 'jackson-databind') {
          if (details.requested.version.startsWith('2.9.') || details.requested.version.startsWith('2.10.') ) {
            details.useVersion '2.10.1'
            details.because 'fixes vulnerability in 2.9.9 and before'
          }
        }
        if (details.requested.group == 'org.bouncycastle' && details.requested.name == 'bcprov-jdk15on') {
          if (details.requested.version.startsWith('1.5') && details.requested.version <= '1.59') {
            details.useVersion '1.62'
            details.because 'fixes vulnerability in 1.5x before 1.6x'
          }
        }
        if (details.requested.group == 'org.apache.zookeeper' && details.requested.name == 'zookeeper') {
          if (details.requested.version.startsWith('3.4') && details.requested.version <= '3.5.5') {
            details.useVersion '3.5.5'
            details.because 'Enforce zookeeper 3.4.14+ to avoid vulnerability CVE-2019-0201'
          }
        }
        if (details.requested.group == 'org.apache.kafka' && details.requested.name == 'kafka_2.11') {
          if (details.requested.version.startsWith('2.0.1') && details.requested.version <= '2.2.1') {
            details.useVersion '2.2.1'
            details.because 'Enforce kafka_2.11 2.0.1 to avoid vulnerability CVE-2018-17196'
          }
        }
        if (details.requested.group == 'org.elasticsearch' && details.requested.name == 'elasticsearch') {
          if (details.requested.version <= esVersion) {
            details.useVersion esVersion
            details.because 'some packages had an earlier ES version'
          }
        }
        if (details.requested.group == 'com.google.guava' && details.requested.name == 'guava') {
          if (details.requested.version <= '27.0.1') {
            details.useVersion '27.0.1-jre'
            details.because 'fixes CVE-2018-10237'
          }
        }
        if (details.requested.group == 'io.netty' && details.requested.name == 'netty-all') {
          if (details.requested.version < '4.1.42.Final') {
            details.useVersion '4.1.42.Final'
            details.because 'fixes CVE-2019-16869'
          }
        }
        if (details.requested.group == 'com.nimbusds' && details.requested.name == 'nimbus-jose-jwt') {
          if (details.requested.version <= '7.8') {
            details.useVersion '7.9'
            details.because 'fixes CVE-2019-17195'
          }
        }
        if (details.requested.group.startsWith('org.apache.tomcat') &&
            details.requested.name.contains('tomcat') &&
            details.requested.version <= '9.0.29') {
          details.useVersion '9.0.30'
          details.because 'Enforce tomcat 9.0.20+ to avoid vulnerabilities CVE-2019-0199, CVE-2019-0232, and CVE-2019-10072'
        }
      }
    }

    if (project.plugins.hasPlugin('java')) {
      project.apply plugin: 'jacoco'
      jacocoTestReport {
        executionData fileTree(projectDir).include("build/jacoco/*.exec")
        reports {
          xml.enabled true
          xml.destination = file("${buildDir}/reports/jacoco/report.xml")
          html.enabled true
          html.destination = file("${buildDir}/reports/jacoco/html")
        }
      }
      check.dependsOn jacocoTestReport
    }
  }
}

group = 'org.cedar.onestop'

subprojects.each {
  it.group = group
  it.version = version
  it.ext.buildDate = "${new Date().format("YYYY-MM-dd'T'HH:mm:ss.SSS'Z'", TimeZone.getTimeZone('UTC'))}"
}

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}
